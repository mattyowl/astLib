name: Testing

on: [push, pull_request, workflow_dispatch]

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: latest supported versions
            os: ubuntu-latest
            python-version: '3.12'
            toxenv: py312-test-all-latest-cov
          - name: oldest supported versions
            os: ubuntu-20.04
            python-version: '3.8'
            toxenv: py38-test-oldest
          - name: macOS 12
            os: macos-12
            label: osx-64
            python-version: '3.10'
            toxenv: py310-test-latest
          - name: macOS 13
            os: macos-13
            label: osx-64
            python-version: '3.12'
            toxenv: py312-test-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Conda w/ Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
      - name: Install Dependencies
        shell: bash -el {0}
        run: |
          pip install tox-conda
      - name: Set env variables for macOS
        if: matrix.label == 'osx-64'
        run: |
          echo "DYLD_FALLBACK_LIBRARY_PATH=${CONDA_PREFIX}/lib" >> $GITHUB_ENV
          SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          echo "SDKROOT: ${SDKROOT}"
          echo "SDKROOT=${SDKROOT}" >> $GITHUB_ENV
          echo "CONDA_BUILD_SYSROOT=${SDKROOT}" >> $GITHUB_ENV
          export CFLAGS="-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include"
          export LDFLAGS="-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib"
      - name: Run tests
        shell: bash -el {0}
        run: |
           tox -e ${{ matrix.toxenv }} ${{ matrix.toxargs }} -- ${{ matrix.toxposargs }}
